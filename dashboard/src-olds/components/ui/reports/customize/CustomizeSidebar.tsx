import { Accordion, AccordionItem, Input, Switch, Divider } from "@heroui/react";
import { FaBuilding, FaCalendarAlt, FaUser } from "react-icons/fa";
import { useReportStore } from "@/stores/useReportStore";

const CustomizeSidebar = () => {
  const {
    header,
    info,
    footer,
    table,
    updateHeader,
    updateInfo,
    updateFooter,
    updateTable
  } = useReportStore();
  return (
    <div className="h-full overflow-y-auto">
      <div className="p-4 bg-zinc-50 dark:bg-zinc-800 rounded-lg sticky top-0 z-10 mb-4">
        <h2 className="text-lg font-semibold">Customize Report</h2>
        <p className="text-xs text-zinc-500 dark:text-zinc-400">Adjust report settings</p>
      </div>

      <Accordion 
        variant="splitted" 
        itemClasses={{ base: "shadow-none mb-2" }}
        defaultExpandedKeys={["header"]}
      >
        {/* Customize Header */}
        <AccordionItem 
          key="header"
          title="Customize Header" 
          startContent={<FaBuilding className="text-primary" />}
        >
          <div className="space-y-3 pb-2">
            <Input
              label="Report Title"
              labelPlacement="outside"
              placeholder="Enter report title"
              value={header.headerTitle}
              onChange={(e) => updateHeader({ headerTitle: e.target.value })}
              size="sm"
              variant="bordered"
            />
            <Input
              label="Institution Name"
              labelPlacement="outside"
              placeholder="Enter institution name"
              value={header.institutionName}
              onChange={(e) => updateHeader({ institutionName: e.target.value })}
              size="sm"
              variant="bordered"
            />
            <Input
              label="Academic Year"
              labelPlacement="outside"
              placeholder="e.g., 2024-2025"
              value={header.academicYear}
              onChange={(e) => updateHeader({ academicYear: e.target.value })}
              size="sm"
              variant="bordered"
              startContent={<FaCalendarAlt className="text-zinc-400" />}
            />
            <Input
              label="Generated By"
              labelPlacement="outside"
              placeholder="Enter your name"
              value={header.generatedBy}
              onChange={(e) => updateHeader({ generatedBy: e.target.value })}
              size="sm"
              variant="bordered"
              startContent={<FaUser className="text-zinc-400" />}
            />
          </div>
        </AccordionItem>

        {/* Customize Info Section */}
        <AccordionItem 
          key="info"
          title="Customize Info Section"
        >
          <div className="space-y-3 pb-2">
            <p className="text-xs text-zinc-500 dark:text-zinc-400 mb-2">
              Toggle visibility of information fields
            </p>
            <Divider />
            <div className="flex justify-between items-center">
              <span className="text-sm">Show Class Info</span>
              <Switch
                size="sm"
                isSelected={info.showClassInfo}
                onValueChange={(value) => updateInfo({ showClassInfo: value })}
              />
            </div>
            <div className="flex justify-between items-center">
              <span className="text-sm">Show Room Info</span>
              <Switch
                size="sm"
                isSelected={info.showRoomInfo}
                onValueChange={(value) => updateInfo({ showRoomInfo: value })}
              />
            </div>
            <div className="flex justify-between items-center">
              <span className="text-sm">Show Course Info</span>
              <Switch
                size="sm"
                isSelected={info.showCourseInfo}
                onValueChange={(value) => updateInfo({ showCourseInfo: value })}
              />
            </div>
            <div className="flex justify-between items-center">
              <span className="text-sm">Show Faculty Info</span>
              <Switch
                size="sm"
                isSelected={info.showFacultyInfo}
                onValueChange={(value) => updateInfo({ showFacultyInfo: value })}
              />
            </div>
            <div className="flex justify-between items-center">
              <span className="text-sm">Show Program Info</span>
              <Switch
                size="sm"
                isSelected={info.showProgramInfo}
                onValueChange={(value) => updateInfo({ showProgramInfo: value })}
              />
            </div>
          </div>
        </AccordionItem>

        {/* Customize Item List/Table */}
        <AccordionItem 
          key="itemlist"
          title="Customize Table"
        >
          <div className="space-y-3 pb-2">
            <p className="text-xs text-zinc-500 dark:text-zinc-400 mb-2">
              Table display settings
            </p>
            <Divider />
            <div className="flex justify-between items-center">
              <span className="text-sm">Striped Rows</span>
              <Switch
                size="sm"
                isSelected={table.showStriped}
                onValueChange={(value) => updateTable({ showStriped: value })}
              />
            </div>
            <div className="flex justify-between items-center">
              <span className="text-sm">Show Footer Summary</span>
              <Switch
                size="sm"
                isSelected={table.showFooterSummary}
                onValueChange={(value) => updateTable({ showFooterSummary: value })}
              />
            </div>
            <Divider />
            <p className="text-xs text-zinc-500 dark:text-zinc-400 italic">
              Click on table headers to customize column labels and widths
            </p>
          </div>
        </AccordionItem>

        {/* Customize Footer */}
        <AccordionItem 
          key="footer"
          title="Customize Footer"
        >
          <div className="space-y-3 pb-2">
            <div className="flex justify-between items-center mb-3">
              <span className="text-sm font-medium">Show Signatures</span>
              <Switch
                size="sm"
                isSelected={footer.showSignatures}
                onValueChange={(value) => updateFooter({ showSignatures: value })}
              />
            </div>
            
            {footer.showSignatures && (
              <>
                <Divider />
                <Input
                  label="Prepared By"
                  labelPlacement="outside"
                  placeholder="Enter name/title"
                  value={footer.preparedBy}
                  onChange={(e) => updateFooter({ preparedBy: e.target.value })}
                  size="sm"
                  variant="bordered"
                />
                <Input
                  label="Verified By"
                  labelPlacement="outside"
                  placeholder="Enter name/title"
                  value={footer.verifiedBy}
                  onChange={(e) => updateFooter({ verifiedBy: e.target.value })}
                  size="sm"
                  variant="bordered"
                />
                <Input
                  label="Approved By"
                  labelPlacement="outside"
                  placeholder="Enter name/title"
                  value={footer.approvedBy}
                  onChange={(e) => updateFooter({ approvedBy: e.target.value })}
                  size="sm"
                  variant="bordered"
                />
              </>
            )}
            
            <Divider />
            <div className="flex justify-between items-center">
              <span className="text-sm">Show Report Info</span>
              <Switch
                size="sm"
                isSelected={footer.showReportInfo}
                onValueChange={(value) => updateFooter({ showReportInfo: value })}
              />
            </div>
          </div>
        </AccordionItem>
      </Accordion>
    </div>
  );
};

export default CustomizeSidebar;